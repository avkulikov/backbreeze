// ============================================
// Utility Class
// ============================================

// Create utility classes from a Sass map.

@mixin bb-utility-class($config) {
  $no-mq: (
    '': false
  );

  $name: map-get($config, 'name');
  $prop: map-get($config, 'prop');
  $values: map-get($config, 'values');
  $pseudo: map-get($config, 'pseudo');

  $bps: map-get($config, 'bps');
  $bps: if($bps, map-merge($no-mq, $bps), $no-mq);

  $negative: if(index($bb-negative-properties, $prop), true, false);
  $directional: if(index($bb-directional-properties, $prop), true, false);

  @each $bp-name, $bp in $bps {
    @include bb-mq($bp) {
      @include bb-utility-class-helper(
        $name,
        $prop,
        $values,
        $negative,
        $bp-name,
        $directional
      );

      @if $pseudo {
        @each $pseudo-class in $pseudo {
          @include bb-utility-class-helper(
            $name,
            $prop,
            $values,
            $negative,
            $bp-name,
            $directional,
            $pseudo-class
          );
        }
      }
    }
  }
}

// Render helper mixin
@mixin bb-utility-class-helper(
  $name,
  $prop,
  $values,
  $negative,
  $bp-name,
  $directional,
  $pseudo: false
) {
  $bp-name: if(str-length($bp-name) > 0, '#{\@}#{$bp-name}', '');
  $name-negative: if($bb-prefix, '-#{$bb-prefix}#{$name}', '-#{$name}');
  $pseudo: if($pseudo, ':#{$pseudo}', '');
  $pseudo-name: if($pseudo, '#{\:}#{$pseudo}', '');

  // Group
  $parent: if($pseudo == ':group-hover', '.group:hover', '');
  $pseudo-name: if($pseudo == ':group-hover', '#{\:}group-hover', $pseudo);
  $pseudo: if($pseudo == ':group-hover', '', '');

  // Directional props
  $prop-top: bb-insert-direction($prop, 'top');
  $prop-left: bb-insert-direction($prop, 'left');
  $prop-right: bb-insert-direction($prop, 'right');
  $prop-bottom: bb-insert-direction($prop, 'bottom');

  $prop-top-left: bb-insert-direction($prop, 'top-left');
  $prop-top-right: bb-insert-direction($prop, 'top-right');
  $prop-bottom-left: bb-insert-direction($prop, 'bottom-left');
  $prop-bottom-right: bb-insert-direction($prop, 'bottom-right');

  $is-border-radius: $prop == 'border-radius';

  @each $key, $val in $values {
    $key: if(str-length($key) > 0, '-#{$key}', '');

    #{$parent}
      .#{$bb-prefix}#{$name}#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
      #{$prop}: #{$val};
    }

    @if $directional and not $is-border-radius {
      #{$parent}
        .#{$bb-prefix}#{$name}-t#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-l#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-left}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-r#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-right}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-b#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-bottom}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-x#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-left}: #{$val};
        #{$prop-right}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-y#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top}: #{$val};
        #{$prop-bottom}: #{$val};
      }
    } @else if $is-border-radius {
      #{$parent}
        .#{$bb-prefix}#{$name}-t#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top-left}: #{$val};
        #{$prop-top-right}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-l#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top-left}: #{$val};
        #{$prop-bottom-left}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-r#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top-right}: #{$val};
        #{$prop-bottom-right)}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-b#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-bottom-left}: #{$val};
        #{$prop-bottom-right)}: #{$val};
      }

      #{$parent}
        .#{$bb-prefix}#{$name}-tl#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top-left}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-tr#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top-right}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-bl#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-bottom-left}: #{$val};
      }
      #{$parent}
        .#{$bb-prefix}#{$name}-br#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-bottom-right)}: #{$val};
      }
    }

    @if $negative and $val != 'auto' {
      #{$parent} .#{$name-negative}#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop}: -#{$val};
      }
    }

    @if $negative and $directional and $val != 'auto' {
      #{$parent}
        .#{$name-negative}-t#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top}: -#{$val};
      }
      #{$parent}
        .#{$name-negative}-l#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-left}: -#{$val};
      }
      #{$parent}
        .#{$name-negative}-b#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-bottom}: -#{$val};
      }
      #{$parent}
        .#{$name-negative}-r#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-right}: -#{$val};
      }
      #{$parent}
        .#{$name-negative}-x#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-left}: -#{$val};
        #{$prop-right}: -#{$val};
      }
      #{$parent}
        .#{$name-negative}-y#{$key}#{$pseudo-name}#{$bp-name}#{$pseudo} {
        #{$prop-top}: -#{$val};
        #{$prop-bottom}: -#{$val};
      }
    }
  }
}

@mixin bb-mq($mq: false, $media: all) {
  @if $mq == 'print' {
    @media print {
      @content;
    }
  } @else if $mq {
    @media #{$media} and (min-width: #{$mq}) {
      @content;
    }
  } @else {
    @content;
  }
}

@function bb-insert-direction($prop, $dir) {
  $index: str-index($prop, '-');

  @if $index {
    @return str-insert($prop, '-#{$dir}', $index);
  }

  @return '#{$prop}-#{$dir}';
}
